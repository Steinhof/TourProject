// -----------------------------------------------------------------------------
// This file contains sass functions.
// -----------------------------------------------------------------------------

/* Px to Em */
$browser-context: 16px
@function em($pixels, $context: $browser-context)
	@return ($pixels / $context) * 1em


/* Px to Rem */
$browser-context: 16px
@function rem($pixels, $context: $browser-context)
	@return #{$pixels/$context}rem


/* Px to VW */
$vw-context: (1920 * 0.01) * 1px
@function vw($target)
	@return ($target / $vw-context) * 1vw


/* Px to VH */
$vh-context: (1080 * 0.01) * 1px
@function vh($target)
	@return ($target / $vh-context) * 1vh


/* More accurate responsive font size */
@function strip-unit($number)
	@if type-of($number) == "number" and not unitless($number)
		@return $number / ($number * 0 + 1)

	@return $number

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px)
	$f-min: strip-unit($f-min)
	$f-max: strip-unit($f-max)
	$w-min: strip-unit($w-min)
	$w-max: strip-unit($w-max)

	$k: ($f-max - $f-min) / ($w-max - $w-min)
	$b: $f-min - $k * $w-min

	$b: $b + $units

	@return calc( #{$k} * 100vw + #{$b} )

@mixin calcFS($f-min, $f-max, $w-min, $w-max, $fallback: false)
	font-size: $f-min

	@media (min-width: $w-min)
		@if $fallback
			font-size: $fallback

		font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px)

	@media (min-width: $w-max)
		font-size: $f-max

/* @include calcFS(16px, 24px, 480px, 1280px, 18px -- fallback); */


// For loop

//@for $i from 0 through  4 // If to is used, the final number is excluded; if through is used, it's included.
//		.feature__#{$i}
//			opacity: 0
//			margin: 10% 0
