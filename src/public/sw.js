!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";var r="BEACON-VERSION",o=200,c=["BEACON-STATIC"],u=[];self.addEventListener("install",(function(e){e.waitUntil(caches.open("pre-cache-"+r).then((function(e){var n=[];return Promise.all(c.map((function(t){return caches.match(t).then((function(r){return r?e.put(t,r):(n.push(t),Promise.resolve())}))}))).then((function(){return e.addAll(n.concat(u))})).catch((function(e){return console.error(e)}))})))})),self.addEventListener("fetch",(function(e){var n=e.request;e.respondWith(caches.match(n).then((function(t){return t||fetch(e.request).then((function(e){var t=e.clone();return[0,o].includes(e.status)&&n.url.indexOf("chrome-extension")&&caches.open("dynamic-"+r).then((function(e){e.put(n,t)})),e}))})))})),self.addEventListener("activate",(function(e){e.waitUntil(caches.keys().then((function(e){e.forEach((function(e){if(e.indexOf(r)<0)return caches.delete(e)}))})))}))}]);